// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/com/slard/filerepository/system_communications.proto

package com.slard.filerepository;

public final class SystemCommunications {
  private SystemCommunications() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class FileName extends
      com.google.protobuf.GeneratedMessage {
    // Use FileName.newBuilder() to construct.
    private FileName() {
      initFields();
    }
    private FileName(boolean noInit) {}
    
    private static final FileName defaultInstance;
    public static FileName getDefaultInstance() {
      return defaultInstance;
    }
    
    public FileName getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.slard.filerepository.SystemCommunications.internal_static_filerepository_FileName_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.slard.filerepository.SystemCommunications.internal_static_filerepository_FileName_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.slard.filerepository.SystemCommunications.FileName parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileName parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileName parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileName parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileName parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileName parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileName parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.slard.filerepository.SystemCommunications.FileName parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.slard.filerepository.SystemCommunications.FileName parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileName parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slard.filerepository.SystemCommunications.FileName prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.slard.filerepository.SystemCommunications.FileName result;
      
      // Construct using com.slard.filerepository.SystemCommunications.FileName.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.slard.filerepository.SystemCommunications.FileName();
        return builder;
      }
      
      protected com.slard.filerepository.SystemCommunications.FileName internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.slard.filerepository.SystemCommunications.FileName();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.slard.filerepository.SystemCommunications.FileName.getDescriptor();
      }
      
      public com.slard.filerepository.SystemCommunications.FileName getDefaultInstanceForType() {
        return com.slard.filerepository.SystemCommunications.FileName.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.slard.filerepository.SystemCommunications.FileName build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.slard.filerepository.SystemCommunications.FileName buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.slard.filerepository.SystemCommunications.FileName buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.slard.filerepository.SystemCommunications.FileName returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.slard.filerepository.SystemCommunications.FileName) {
          return mergeFrom((com.slard.filerepository.SystemCommunications.FileName)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.slard.filerepository.SystemCommunications.FileName other) {
        if (other == com.slard.filerepository.SystemCommunications.FileName.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:filerepository.FileName)
    }
    
    static {
      defaultInstance = new FileName(true);
      com.slard.filerepository.SystemCommunications.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:filerepository.FileName)
  }
  
  public static final class FileContents extends
      com.google.protobuf.GeneratedMessage {
    // Use FileContents.newBuilder() to construct.
    private FileContents() {
      initFields();
    }
    private FileContents(boolean noInit) {}
    
    private static final FileContents defaultInstance;
    public static FileContents getDefaultInstance() {
      return defaultInstance;
    }
    
    public FileContents getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.slard.filerepository.SystemCommunications.internal_static_filerepository_FileContents_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.slard.filerepository.SystemCommunications.internal_static_filerepository_FileContents_fieldAccessorTable;
    }
    
    // required .filerepository.FileName name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private com.slard.filerepository.SystemCommunications.FileName name_;
    public boolean hasName() { return hasName; }
    public com.slard.filerepository.SystemCommunications.FileName getName() { return name_; }
    
    // required bytes content = 2;
    public static final int CONTENT_FIELD_NUMBER = 2;
    private boolean hasContent;
    private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasContent() { return hasContent; }
    public com.google.protobuf.ByteString getContent() { return content_; }
    
    private void initFields() {
      name_ = com.slard.filerepository.SystemCommunications.FileName.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasContent) return false;
      if (!getName().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeMessage(1, getName());
      }
      if (hasContent()) {
        output.writeBytes(2, getContent());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getName());
      }
      if (hasContent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getContent());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.slard.filerepository.SystemCommunications.FileContents parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileContents parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileContents parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileContents parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileContents parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileContents parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileContents parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.slard.filerepository.SystemCommunications.FileContents parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.slard.filerepository.SystemCommunications.FileContents parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileContents parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slard.filerepository.SystemCommunications.FileContents prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.slard.filerepository.SystemCommunications.FileContents result;
      
      // Construct using com.slard.filerepository.SystemCommunications.FileContents.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.slard.filerepository.SystemCommunications.FileContents();
        return builder;
      }
      
      protected com.slard.filerepository.SystemCommunications.FileContents internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.slard.filerepository.SystemCommunications.FileContents();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.slard.filerepository.SystemCommunications.FileContents.getDescriptor();
      }
      
      public com.slard.filerepository.SystemCommunications.FileContents getDefaultInstanceForType() {
        return com.slard.filerepository.SystemCommunications.FileContents.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.slard.filerepository.SystemCommunications.FileContents build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.slard.filerepository.SystemCommunications.FileContents buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.slard.filerepository.SystemCommunications.FileContents buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.slard.filerepository.SystemCommunications.FileContents returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.slard.filerepository.SystemCommunications.FileContents) {
          return mergeFrom((com.slard.filerepository.SystemCommunications.FileContents)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.slard.filerepository.SystemCommunications.FileContents other) {
        if (other == com.slard.filerepository.SystemCommunications.FileContents.getDefaultInstance()) return this;
        if (other.hasName()) {
          mergeName(other.getName());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.slard.filerepository.SystemCommunications.FileName.Builder subBuilder = com.slard.filerepository.SystemCommunications.FileName.newBuilder();
              if (hasName()) {
                subBuilder.mergeFrom(getName());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setName(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setContent(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required .filerepository.FileName name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public com.slard.filerepository.SystemCommunications.FileName getName() {
        return result.getName();
      }
      public Builder setName(com.slard.filerepository.SystemCommunications.FileName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder setName(com.slard.filerepository.SystemCommunications.FileName.Builder builderForValue) {
        result.hasName = true;
        result.name_ = builderForValue.build();
        return this;
      }
      public Builder mergeName(com.slard.filerepository.SystemCommunications.FileName value) {
        if (result.hasName() &&
            result.name_ != com.slard.filerepository.SystemCommunications.FileName.getDefaultInstance()) {
          result.name_ =
            com.slard.filerepository.SystemCommunications.FileName.newBuilder(result.name_).mergeFrom(value).buildPartial();
        } else {
          result.name_ = value;
        }
        result.hasName = true;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = com.slard.filerepository.SystemCommunications.FileName.getDefaultInstance();
        return this;
      }
      
      // required bytes content = 2;
      public boolean hasContent() {
        return result.hasContent();
      }
      public com.google.protobuf.ByteString getContent() {
        return result.getContent();
      }
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder clearContent() {
        result.hasContent = false;
        result.content_ = getDefaultInstance().getContent();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:filerepository.FileContents)
    }
    
    static {
      defaultInstance = new FileContents(true);
      com.slard.filerepository.SystemCommunications.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:filerepository.FileContents)
  }
  
  public static final class FileToStore extends
      com.google.protobuf.GeneratedMessage {
    // Use FileToStore.newBuilder() to construct.
    private FileToStore() {
      initFields();
    }
    private FileToStore(boolean noInit) {}
    
    private static final FileToStore defaultInstance;
    public static FileToStore getDefaultInstance() {
      return defaultInstance;
    }
    
    public FileToStore getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.slard.filerepository.SystemCommunications.internal_static_filerepository_FileToStore_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.slard.filerepository.SystemCommunications.internal_static_filerepository_FileToStore_fieldAccessorTable;
    }
    
    // required .filerepository.FileContents content = 1;
    public static final int CONTENT_FIELD_NUMBER = 1;
    private boolean hasContent;
    private com.slard.filerepository.SystemCommunications.FileContents content_;
    public boolean hasContent() { return hasContent; }
    public com.slard.filerepository.SystemCommunications.FileContents getContent() { return content_; }
    
    // optional bool sync = 3;
    public static final int SYNC_FIELD_NUMBER = 3;
    private boolean hasSync;
    private boolean sync_ = false;
    public boolean hasSync() { return hasSync; }
    public boolean getSync() { return sync_; }
    
    private void initFields() {
      content_ = com.slard.filerepository.SystemCommunications.FileContents.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasContent) return false;
      if (!getContent().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasContent()) {
        output.writeMessage(1, getContent());
      }
      if (hasSync()) {
        output.writeBool(3, getSync());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasContent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getContent());
      }
      if (hasSync()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getSync());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.slard.filerepository.SystemCommunications.FileToStore parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileToStore parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileToStore parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileToStore parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileToStore parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileToStore parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileToStore parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.slard.filerepository.SystemCommunications.FileToStore parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.slard.filerepository.SystemCommunications.FileToStore parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.FileToStore parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slard.filerepository.SystemCommunications.FileToStore prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.slard.filerepository.SystemCommunications.FileToStore result;
      
      // Construct using com.slard.filerepository.SystemCommunications.FileToStore.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.slard.filerepository.SystemCommunications.FileToStore();
        return builder;
      }
      
      protected com.slard.filerepository.SystemCommunications.FileToStore internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.slard.filerepository.SystemCommunications.FileToStore();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.slard.filerepository.SystemCommunications.FileToStore.getDescriptor();
      }
      
      public com.slard.filerepository.SystemCommunications.FileToStore getDefaultInstanceForType() {
        return com.slard.filerepository.SystemCommunications.FileToStore.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.slard.filerepository.SystemCommunications.FileToStore build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.slard.filerepository.SystemCommunications.FileToStore buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.slard.filerepository.SystemCommunications.FileToStore buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.slard.filerepository.SystemCommunications.FileToStore returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.slard.filerepository.SystemCommunications.FileToStore) {
          return mergeFrom((com.slard.filerepository.SystemCommunications.FileToStore)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.slard.filerepository.SystemCommunications.FileToStore other) {
        if (other == com.slard.filerepository.SystemCommunications.FileToStore.getDefaultInstance()) return this;
        if (other.hasContent()) {
          mergeContent(other.getContent());
        }
        if (other.hasSync()) {
          setSync(other.getSync());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.slard.filerepository.SystemCommunications.FileContents.Builder subBuilder = com.slard.filerepository.SystemCommunications.FileContents.newBuilder();
              if (hasContent()) {
                subBuilder.mergeFrom(getContent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setContent(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setSync(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required .filerepository.FileContents content = 1;
      public boolean hasContent() {
        return result.hasContent();
      }
      public com.slard.filerepository.SystemCommunications.FileContents getContent() {
        return result.getContent();
      }
      public Builder setContent(com.slard.filerepository.SystemCommunications.FileContents value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder setContent(com.slard.filerepository.SystemCommunications.FileContents.Builder builderForValue) {
        result.hasContent = true;
        result.content_ = builderForValue.build();
        return this;
      }
      public Builder mergeContent(com.slard.filerepository.SystemCommunications.FileContents value) {
        if (result.hasContent() &&
            result.content_ != com.slard.filerepository.SystemCommunications.FileContents.getDefaultInstance()) {
          result.content_ =
            com.slard.filerepository.SystemCommunications.FileContents.newBuilder(result.content_).mergeFrom(value).buildPartial();
        } else {
          result.content_ = value;
        }
        result.hasContent = true;
        return this;
      }
      public Builder clearContent() {
        result.hasContent = false;
        result.content_ = com.slard.filerepository.SystemCommunications.FileContents.getDefaultInstance();
        return this;
      }
      
      // optional bool sync = 3;
      public boolean hasSync() {
        return result.hasSync();
      }
      public boolean getSync() {
        return result.getSync();
      }
      public Builder setSync(boolean value) {
        result.hasSync = true;
        result.sync_ = value;
        return this;
      }
      public Builder clearSync() {
        result.hasSync = false;
        result.sync_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:filerepository.FileToStore)
    }
    
    static {
      defaultInstance = new FileToStore(true);
      com.slard.filerepository.SystemCommunications.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:filerepository.FileToStore)
  }
  
  public static final class Status extends
      com.google.protobuf.GeneratedMessage {
    // Use Status.newBuilder() to construct.
    private Status() {
      initFields();
    }
    private Status(boolean noInit) {}
    
    private static final Status defaultInstance;
    public static Status getDefaultInstance() {
      return defaultInstance;
    }
    
    public Status getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.slard.filerepository.SystemCommunications.internal_static_filerepository_Status_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.slard.filerepository.SystemCommunications.internal_static_filerepository_Status_fieldAccessorTable;
    }
    
    // required bool success = 1;
    public static final int SUCCESS_FIELD_NUMBER = 1;
    private boolean hasSuccess;
    private boolean success_ = false;
    public boolean hasSuccess() { return hasSuccess; }
    public boolean getSuccess() { return success_; }
    
    // optional string error_information = 2;
    public static final int ERROR_INFORMATION_FIELD_NUMBER = 2;
    private boolean hasErrorInformation;
    private java.lang.String errorInformation_ = "";
    public boolean hasErrorInformation() { return hasErrorInformation; }
    public java.lang.String getErrorInformation() { return errorInformation_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasSuccess) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSuccess()) {
        output.writeBool(1, getSuccess());
      }
      if (hasErrorInformation()) {
        output.writeString(2, getErrorInformation());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSuccess()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getSuccess());
      }
      if (hasErrorInformation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getErrorInformation());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.slard.filerepository.SystemCommunications.Status parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.Status parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.Status parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.Status parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.Status parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.Status parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.Status parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.slard.filerepository.SystemCommunications.Status parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.slard.filerepository.SystemCommunications.Status parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.slard.filerepository.SystemCommunications.Status parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slard.filerepository.SystemCommunications.Status prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.slard.filerepository.SystemCommunications.Status result;
      
      // Construct using com.slard.filerepository.SystemCommunications.Status.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.slard.filerepository.SystemCommunications.Status();
        return builder;
      }
      
      protected com.slard.filerepository.SystemCommunications.Status internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.slard.filerepository.SystemCommunications.Status();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.slard.filerepository.SystemCommunications.Status.getDescriptor();
      }
      
      public com.slard.filerepository.SystemCommunications.Status getDefaultInstanceForType() {
        return com.slard.filerepository.SystemCommunications.Status.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.slard.filerepository.SystemCommunications.Status build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.slard.filerepository.SystemCommunications.Status buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.slard.filerepository.SystemCommunications.Status buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.slard.filerepository.SystemCommunications.Status returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.slard.filerepository.SystemCommunications.Status) {
          return mergeFrom((com.slard.filerepository.SystemCommunications.Status)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.slard.filerepository.SystemCommunications.Status other) {
        if (other == com.slard.filerepository.SystemCommunications.Status.getDefaultInstance()) return this;
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        if (other.hasErrorInformation()) {
          setErrorInformation(other.getErrorInformation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSuccess(input.readBool());
              break;
            }
            case 18: {
              setErrorInformation(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required bool success = 1;
      public boolean hasSuccess() {
        return result.hasSuccess();
      }
      public boolean getSuccess() {
        return result.getSuccess();
      }
      public Builder setSuccess(boolean value) {
        result.hasSuccess = true;
        result.success_ = value;
        return this;
      }
      public Builder clearSuccess() {
        result.hasSuccess = false;
        result.success_ = false;
        return this;
      }
      
      // optional string error_information = 2;
      public boolean hasErrorInformation() {
        return result.hasErrorInformation();
      }
      public java.lang.String getErrorInformation() {
        return result.getErrorInformation();
      }
      public Builder setErrorInformation(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasErrorInformation = true;
        result.errorInformation_ = value;
        return this;
      }
      public Builder clearErrorInformation() {
        result.hasErrorInformation = false;
        result.errorInformation_ = getDefaultInstance().getErrorInformation();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:filerepository.Status)
    }
    
    static {
      defaultInstance = new Status(true);
      com.slard.filerepository.SystemCommunications.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:filerepository.Status)
  }
  
  public static abstract class RepositoryNode
      implements com.google.protobuf.Service {
    protected RepositoryNode() {}
    
    public interface Interface {
      public abstract void store(
          com.google.protobuf.RpcController controller,
          com.slard.filerepository.SystemCommunications.FileToStore request,
          com.google.protobuf.RpcCallback<com.slard.filerepository.SystemCommunications.Status> done);
      
      public abstract void retrieve(
          com.google.protobuf.RpcController controller,
          com.slard.filerepository.SystemCommunications.FileName request,
          com.google.protobuf.RpcCallback<com.slard.filerepository.SystemCommunications.FileContents> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new RepositoryNode() {
        @Override
        public  void store(
            com.google.protobuf.RpcController controller,
            com.slard.filerepository.SystemCommunications.FileToStore request,
            com.google.protobuf.RpcCallback<com.slard.filerepository.SystemCommunications.Status> done) {
          impl.store(controller, request, done);
        }
        
        @Override
        public  void retrieve(
            com.google.protobuf.RpcController controller,
            com.slard.filerepository.SystemCommunications.FileName request,
            com.google.protobuf.RpcCallback<com.slard.filerepository.SystemCommunications.FileContents> done) {
          impl.retrieve(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.store(controller, (com.slard.filerepository.SystemCommunications.FileToStore)request);
            case 1:
              return impl.retrieve(controller, (com.slard.filerepository.SystemCommunications.FileName)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.slard.filerepository.SystemCommunications.FileToStore.getDefaultInstance();
            case 1:
              return com.slard.filerepository.SystemCommunications.FileName.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.slard.filerepository.SystemCommunications.Status.getDefaultInstance();
            case 1:
              return com.slard.filerepository.SystemCommunications.FileContents.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void store(
        com.google.protobuf.RpcController controller,
        com.slard.filerepository.SystemCommunications.FileToStore request,
        com.google.protobuf.RpcCallback<com.slard.filerepository.SystemCommunications.Status> done);
    
    public abstract void retrieve(
        com.google.protobuf.RpcController controller,
        com.slard.filerepository.SystemCommunications.FileName request,
        com.google.protobuf.RpcCallback<com.slard.filerepository.SystemCommunications.FileContents> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.slard.filerepository.SystemCommunications.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.store(controller, (com.slard.filerepository.SystemCommunications.FileToStore)request,
            com.google.protobuf.RpcUtil.<com.slard.filerepository.SystemCommunications.Status>specializeCallback(
              done));
          return;
        case 1:
          this.retrieve(controller, (com.slard.filerepository.SystemCommunications.FileName)request,
            com.google.protobuf.RpcUtil.<com.slard.filerepository.SystemCommunications.FileContents>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.slard.filerepository.SystemCommunications.FileToStore.getDefaultInstance();
        case 1:
          return com.slard.filerepository.SystemCommunications.FileName.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.slard.filerepository.SystemCommunications.Status.getDefaultInstance();
        case 1:
          return com.slard.filerepository.SystemCommunications.FileContents.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.slard.filerepository.SystemCommunications.RepositoryNode implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void store(
          com.google.protobuf.RpcController controller,
          com.slard.filerepository.SystemCommunications.FileToStore request,
          com.google.protobuf.RpcCallback<com.slard.filerepository.SystemCommunications.Status> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.slard.filerepository.SystemCommunications.Status.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.slard.filerepository.SystemCommunications.Status.class,
            com.slard.filerepository.SystemCommunications.Status.getDefaultInstance()));
      }
      
      public  void retrieve(
          com.google.protobuf.RpcController controller,
          com.slard.filerepository.SystemCommunications.FileName request,
          com.google.protobuf.RpcCallback<com.slard.filerepository.SystemCommunications.FileContents> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          com.slard.filerepository.SystemCommunications.FileContents.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.slard.filerepository.SystemCommunications.FileContents.class,
            com.slard.filerepository.SystemCommunications.FileContents.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.slard.filerepository.SystemCommunications.Status store(
          com.google.protobuf.RpcController controller,
          com.slard.filerepository.SystemCommunications.FileToStore request)
          throws com.google.protobuf.ServiceException;
      
      public com.slard.filerepository.SystemCommunications.FileContents retrieve(
          com.google.protobuf.RpcController controller,
          com.slard.filerepository.SystemCommunications.FileName request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.slard.filerepository.SystemCommunications.Status store(
          com.google.protobuf.RpcController controller,
          com.slard.filerepository.SystemCommunications.FileToStore request)
          throws com.google.protobuf.ServiceException {
        return (com.slard.filerepository.SystemCommunications.Status) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.slard.filerepository.SystemCommunications.Status.getDefaultInstance());
      }
      
      
      public com.slard.filerepository.SystemCommunications.FileContents retrieve(
          com.google.protobuf.RpcController controller,
          com.slard.filerepository.SystemCommunications.FileName request)
          throws com.google.protobuf.ServiceException {
        return (com.slard.filerepository.SystemCommunications.FileContents) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          com.slard.filerepository.SystemCommunications.FileContents.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_filerepository_FileName_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_filerepository_FileName_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_filerepository_FileContents_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_filerepository_FileContents_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_filerepository_FileToStore_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_filerepository_FileToStore_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_filerepository_Status_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_filerepository_Status_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n8src/com/slard/filerepository/system_co" +
      "mmunications.proto\022\016filerepository\"\030\n\010Fi" +
      "leName\022\014\n\004name\030\001 \002(\t\"G\n\014FileContents\022&\n\004" +
      "name\030\001 \002(\0132\030.filerepository.FileName\022\017\n\007" +
      "content\030\002 \002(\014\"J\n\013FileToStore\022-\n\007content\030" +
      "\001 \002(\0132\034.filerepository.FileContents\022\014\n\004s" +
      "ync\030\003 \001(\010\"4\n\006Status\022\017\n\007success\030\001 \002(\010\022\031\n\021" +
      "error_information\030\002 \001(\t2\222\001\n\016RepositoryNo" +
      "de\022<\n\005Store\022\033.filerepository.FileToStore" +
      "\032\026.filerepository.Status\022B\n\010Retrieve\022\030.f",
      "ilerepository.FileName\032\034.filerepository." +
      "FileContentsB\032\n\030com.slard.filerepository"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_filerepository_FileName_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_filerepository_FileName_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_filerepository_FileName_descriptor,
              new java.lang.String[] { "Name", },
              com.slard.filerepository.SystemCommunications.FileName.class,
              com.slard.filerepository.SystemCommunications.FileName.Builder.class);
          internal_static_filerepository_FileContents_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_filerepository_FileContents_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_filerepository_FileContents_descriptor,
              new java.lang.String[] { "Name", "Content", },
              com.slard.filerepository.SystemCommunications.FileContents.class,
              com.slard.filerepository.SystemCommunications.FileContents.Builder.class);
          internal_static_filerepository_FileToStore_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_filerepository_FileToStore_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_filerepository_FileToStore_descriptor,
              new java.lang.String[] { "Content", "Sync", },
              com.slard.filerepository.SystemCommunications.FileToStore.class,
              com.slard.filerepository.SystemCommunications.FileToStore.Builder.class);
          internal_static_filerepository_Status_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_filerepository_Status_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_filerepository_Status_descriptor,
              new java.lang.String[] { "Success", "ErrorInformation", },
              com.slard.filerepository.SystemCommunications.Status.class,
              com.slard.filerepository.SystemCommunications.Status.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
